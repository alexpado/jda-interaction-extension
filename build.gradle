import java.nio.charset.StandardCharsets

plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'org.ajoberstar.reckon' version '0.18.3'
}

def generalCharset = StandardCharsets.UTF_8.name()

static def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

group 'fr.alexpado'

compileJava.options.encoding = generalCharset
compileTestJava.options.encoding = generalCharset
javadoc.options.encoding = generalCharset

reckon {
    defaultInferredScope = 'patch'
    stages('dev', 'beta', 'rc', 'final')

    scopeCalc = calcScopeFromProp() | calcScopeFromCommitMessages()
    stageCalc = calcStageFromProp()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.3'

    implementation group: 'net.dv8tion', name: 'JDA', version: '5.1.2'
    implementation group: 'io.sentry', name: 'sentry', version: '7.16.0'
}

test {
    useJUnitPlatform()
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

// <editor-fold desc="Publish Configuration Hell">
nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword

            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = project.name
                description = 'JDA Interaction Tools - JDA interaction made easier'

                url = 'https://github.com/alexpado/jda-interactions-extension'

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'alexpado'
                        name = 'Alexandre PADOVAN'
                        email = 'contact@alexpado.fr'
                    }
                }

                scm {
                    connection = 'scm:git:github.com/alexpado/jda-interactions-extension.git'
                    developerConnection = 'scm:git:ssh://github.com/alexpado/jda-interactions-extension.git'
                    url = 'https://github.com/alexpado/jda-interactions-extension/tree/main'
                }
            }
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

signing {
    sign publishing.publications
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
// </editor-fold>
